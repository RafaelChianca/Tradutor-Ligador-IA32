LerHexa: enter 4,0
mov dword [ebp-4], 0; zera o contador
mov dword ebx, [ebp+12]; copia o endereço para ebx
mov dword ecx, [ebp+8]; copia o tamanho máximo
loop2: push ecx ;salva o tamanho máximo
push ebx ;salva o endereço
push ebx ;endereço de retorno do char
call LeerChar
pop ebx ;recupera o endereço
pop ecx ;recupera tamanho maximo
add dword[ebp-4], 0x1 ; contador ++
cmp dword [ebx], 0x0A ;se for enter pula
je retorno2
add dword ebx, 0x1 ;aumenta o endereço em 1B
cmp dword [ebp-4], ecx ;limite máximo estabelecido pelo usuário
jb loop2
retorno2: mov eax, dword[ebp-4] ; move a quantidade lida para eax
leave
ret 8 ;elimina o endereço que foi gravado da pilha
